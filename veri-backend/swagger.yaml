tags:
- name: veris
  description: veris API
- name: users
  description: Experimental users API

paths:
# [GET] veris
  /veris:
    get:
        tags:
        - veris
        summary: Find All Veris
        responses:
          200:
            description: 'OK'
          500:
            description: 'Server Error'

# [POST] veris
    post:
      tags:
      - veris
      summary: Add Veris
      parameters:
      - name: body
        in: body
        description: veri Data
        required: true
        schema:
          $ref: '#/definitions/veris'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] veris/id
  /veris/{id}:
    get:
      tags:
      - veris
      summary: Find Veri By Id
      parameters:
      - name: id
        in: path
        description: Veri Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] veris/id
    put:
      tags:
      - veris
      summary: Update Veri By Id
      parameters:
      - name: id
        in: path
        description: veri Id
        required: true
        type: integer
      - name: body
        in: body
        description: veri Data
        required: true
        schema:
          $ref: '#/definitions/veris'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] veris/id
    delete:
      tags:
      - veris
      summary: Delete Veri By Id
      parameters:
      - name: id
        in: path
        description: veri Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  users:
    type: object
    required:
        - email
        - password
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
  veris:
    type: object
    required:
        - event_name
        - event_contact_email
        - event_type
        - event_start_date
        - event_end_date
        - artwork_name
        - live_distribution
    optional:
        - event_description
        - artwork_description
        - live_distribution_url
    properties:
      event_name:
        type: string
        description: event Name
      event_contact_email:
        type: string
        description: event description
      event_type:
        type: string
        description: single/ multiday event
      event_start_date:
        type: string
        description: event starting date
      event_end_date:
        type: string
        description: event ending date 
      artwork_name:
        type: string
        description: name of the included artwork
      artwork_description:
        type: string
        description: artwork description
      live_distribution:
        type: boolean
        description: artwork description
      live_distribution_url:
        type: string
        description: artwork description
schemes:
 - https
 - http
